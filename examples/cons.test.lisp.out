(claim true (nu (A B) (-> A B A)))
(claim false (nu (A B) (-> A B B)))
(claim if (nu (A B C) (-> (-> A B C) A B C)))
(claim and (nu (A B C D) (-> (-> A (-> B C C) D) A D)))
(claim or (nu (A B C D) (-> (-> (-> A B A) C D) C D)))
(claim not (nu (A B C D E) (-> (-> (-> A B B) (-> C D C) E) E)))
(claim cons (nu (A B C) (-> A B (-> A B C) C)))
(claim car (nu (A B C) (-> (-> (-> A B A) C) C)))
(claim cdr (nu (A B C) (-> (-> (-> A B B) C) C)))
(claim null (nu (A B C) (-> A B C B)))
(claim null? (nu (A B C D E) (-> (-> (-> A B C D D) E) E)))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
(the (nu (A B) (-> A B B)) (lambda (t f) f))
(the (nu (A B) (-> A B B)) (lambda (t f) f))
(the (nu (A B) (-> A B B)) (lambda (t f) f))
(the (nu (A B) (-> A B B)) (lambda (t f) f))
(the (nu (A B) (-> A B B)) (lambda (t f) f))
(the (nu (A B) (-> A B B)) (lambda (t f) f))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
(the (nu (A B) (-> A B A)) (lambda (t f) t))
